

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 12:06:36 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F887 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  008F                     	;# 
    98  0090                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009C                     	;# 
   113  009D                     	;# 
   114  009E                     	;# 
   115  009F                     	;# 
   116  0105                     	;# 
   117  0107                     	;# 
   118  0108                     	;# 
   119  0109                     	;# 
   120  010C                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  0185                     	;# 
   126  0187                     	;# 
   127  0188                     	;# 
   128  0189                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0095                     	;# 
   184  0096                     	;# 
   185  0097                     	;# 
   186  0098                     	;# 
   187  0099                     	;# 
   188  009A                     	;# 
   189  009B                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  0105                     	;# 
   195  0107                     	;# 
   196  0108                     	;# 
   197  0109                     	;# 
   198  010C                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0185                     	;# 
   204  0187                     	;# 
   205  0188                     	;# 
   206  0189                     	;# 
   207  018C                     	;# 
   208  018D                     	;# 
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000E                     	;# 
   225  000F                     	;# 
   226  0010                     	;# 
   227  0011                     	;# 
   228  0012                     	;# 
   229  0013                     	;# 
   230  0014                     	;# 
   231  0015                     	;# 
   232  0015                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  0081                     	;# 
   245  0085                     	;# 
   246  0086                     	;# 
   247  0087                     	;# 
   248  0088                     	;# 
   249  0089                     	;# 
   250  008C                     	;# 
   251  008D                     	;# 
   252  008E                     	;# 
   253  008F                     	;# 
   254  0090                     	;# 
   255  0091                     	;# 
   256  0092                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0094                     	;# 
   261  0095                     	;# 
   262  0096                     	;# 
   263  0097                     	;# 
   264  0098                     	;# 
   265  0099                     	;# 
   266  009A                     	;# 
   267  009B                     	;# 
   268  009C                     	;# 
   269  009D                     	;# 
   270  009E                     	;# 
   271  009F                     	;# 
   272  0105                     	;# 
   273  0107                     	;# 
   274  0108                     	;# 
   275  0109                     	;# 
   276  010C                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  010E                     	;# 
   280  010F                     	;# 
   281  0185                     	;# 
   282  0187                     	;# 
   283  0188                     	;# 
   284  0189                     	;# 
   285  018C                     	;# 
   286  018D                     	;# 
   287  0013                     _SSPBUF	set	19
   288  0014                     _SSPCON	set	20
   289  001E                     _ADRESH	set	30
   290  001F                     _ADCON0bits	set	31
   291  000C                     _PIR1bits	set	12
   292  000B                     _INTCONbits	set	11
   293  0008                     _PORTD	set	8
   294  0007                     _PORTC	set	7
   295  0006                     _PORTB	set	6
   296  0005                     _PORTA	set	5
   297  0063                     _SSPIF	set	99
   298  0094                     _SSPSTATbits	set	148
   299  0094                     _SSPSTAT	set	148
   300  008C                     _PIE1bits	set	140
   301  009F                     _ADCON1	set	159
   302  0088                     _TRISD	set	136
   303  0087                     _TRISC	set	135
   304  0086                     _TRISB	set	134
   305  0085                     _TRISA	set	133
   306  043B                     _TRISC3	set	1083
   307  043D                     _TRISC5	set	1085
   308  0189                     _ANSELH	set	393
   309  0188                     _ANSEL	set	392
   310                           
   311                           ; #config settings
   312  0000                     
   313                           	psect	cinit
   314  000F                     start_initialization:	
   315  000F                     __initialization:	
   316                           
   317                           ; Clear objects allocated to COMMON
   318  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   319  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   320  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   321  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   322                           
   323                           ; Clear objects allocated to BANK0
   324  0013  1283               	bcf	3,5	;RP0=0, select bank0
   325  0014  1303               	bcf	3,6	;RP1=0, select bank0
   326  0015  01A8               	clrf	__pbssBANK0& (0+127)
   327  0016  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   328  0017                     end_of_initialization:	
   329                           ;End of C runtime variable initialization code
   330                           
   331  0017                     __end_of__initialization:	
   332  0017  0183               	clrf	3
   333  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   334                           
   335                           	psect	bssCOMMON
   336  0075                     __pbssCOMMON:	
   337  0075                     _Val2:	
   338  0075                     	ds	2
   339  0077                     _escoger:	
   340  0077                     	ds	2
   341                           
   342                           	psect	bssBANK0
   343  0028                     __pbssBANK0:	
   344  0028                     _Val1:	
   345  0028                     	ds	2
   346                           
   347                           	psect	cstackCOMMON
   348  0070                     __pcstackCOMMON:	
   349  0070                     ?_spiRead:	
   350  0070                     ??_spiRead:	
   351                           ; 1 bytes @ 0x0
   352                           
   353  0070                     ?_spiWrite:	
   354                           ; 1 bytes @ 0x0
   355                           
   356  0070                     ??_spiWrite:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_config:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ?_isr:	
   363                           ; 1 bytes @ 0x0
   364                           
   365  0070                     ?_main:	
   366                           ; 1 bytes @ 0x0
   367                           
   368  0070                     ?_spiReceiveWait:	
   369                           ; 1 bytes @ 0x0
   370                           
   371  0070                     ??_spiReceiveWait:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     spiWrite@dat:	
   375                           ; 1 bytes @ 0x0
   376                           
   377                           
   378                           ; 1 bytes @ 0x0
   379  0070                     	ds	1
   380  0071                     ??_isr:	
   381                           
   382                           ; 1 bytes @ 0x1
   383  0071                     	ds	4
   384  0075                     ??_spiInit:	
   385                           
   386                           	psect	cstackBANK0
   387  0020                     __pcstackBANK0:	
   388                           ; 1 bytes @ 0x5
   389                           
   390  0020                     ?_spiInit:	
   391  0020                     spiInit@sDataSample:	
   392                           ; 1 bytes @ 0x0
   393                           
   394                           
   395                           ; 1 bytes @ 0x0
   396  0020                     	ds	1
   397  0021                     spiInit@sClockIdle:	
   398                           
   399                           ; 1 bytes @ 0x1
   400  0021                     	ds	1
   401  0022                     spiInit@sTransmitEdge:	
   402                           
   403                           ; 1 bytes @ 0x2
   404  0022                     	ds	1
   405  0023                     spiInit@sType:	
   406                           
   407                           ; 1 bytes @ 0x3
   408  0023                     	ds	1
   409  0024                     ??_config:	
   410                           
   411                           ; 1 bytes @ 0x4
   412  0024                     	ds	2
   413  0026                     ??_main:	
   414                           
   415                           ; 1 bytes @ 0x6
   416  0026                     	ds	2
   417                           
   418                           	psect	maintext
   419  001B                     __pmaintext:	
   420 ;;
   421 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   422 ;;
   423 ;; *************** function _main *****************
   424 ;; Defined at:
   425 ;;		line 95 in file "Lab04Slave.c"
   426 ;; Parameters:    Size  Location     Type
   427 ;;		None
   428 ;; Auto vars:     Size  Location     Type
   429 ;;		None
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, pclath, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : B00/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   439 ;;      Params:         0       0       0       0       0
   440 ;;      Locals:         0       0       0       0       0
   441 ;;      Temps:          0       2       0       0       0
   442 ;;      Totals:         0       2       0       0       0
   443 ;;Total ram usage:        2 bytes
   444 ;; Hardware stack levels required when called:    5
   445 ;; This function calls:
   446 ;;		_config
   447 ;; This function is called by:
   448 ;;		Startup code after reset
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           
   453                           ;psect for function _main
   454  001B                     _main:	
   455  001B                     l927:	
   456                           ;incstack = 0
   457                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   458                           
   459                           
   460                           ;Lab04Slave.c: 96:     config();
   461  001B  120A  118A  205A  120A  118A  	fcall	_config
   462  0020                     l929:	
   463                           
   464                           ;Lab04Slave.c: 101:         ADCON0bits.ADCS1 = 1;
   465  0020  1283               	bcf	3,5	;RP0=0, select bank0
   466  0021  1303               	bcf	3,6	;RP1=0, select bank0
   467  0022  179F               	bsf	31,7	;volatile
   468  0023                     l931:	
   469                           
   470                           ;Lab04Slave.c: 102:         ADCON0bits.ADCS0 = 0;
   471  0023  131F               	bcf	31,6	;volatile
   472  0024                     l933:	
   473                           
   474                           ;Lab04Slave.c: 104:         ADCON0bits.CHS3 = 0;
   475  0024  129F               	bcf	31,5	;volatile
   476  0025                     l935:	
   477                           
   478                           ;Lab04Slave.c: 105:         ADCON0bits.CHS2 = 0;
   479  0025  121F               	bcf	31,4	;volatile
   480  0026                     l937:	
   481                           
   482                           ;Lab04Slave.c: 106:         ADCON0bits.CHS1 = 0;
   483  0026  119F               	bcf	31,3	;volatile
   484  0027                     l939:	
   485                           
   486                           ;Lab04Slave.c: 107:         ADCON0bits.CHS0 = 0;
   487  0027  111F               	bcf	31,2	;volatile
   488  0028                     l941:	
   489                           
   490                           ;Lab04Slave.c: 109:         PIR1bits.ADIF = 0;
   491  0028  130C               	bcf	12,6	;volatile
   492  0029                     l943:	
   493                           
   494                           ;Lab04Slave.c: 110:         ADCON0bits.GO = 1;
   495  0029  149F               	bsf	31,1	;volatile
   496  002A                     l945:	
   497                           
   498                           ;Lab04Slave.c: 112:         Val1 = ADRESH;
   499  002A  081E               	movf	30,w	;volatile
   500  002B  00A6               	movwf	??_main
   501  002C  01A7               	clrf	??_main+1
   502  002D  0826               	movf	??_main,w
   503  002E  00A8               	movwf	_Val1
   504  002F  0827               	movf	??_main+1,w
   505  0030  00A9               	movwf	_Val1+1
   506  0031                     l947:	
   507                           
   508                           ;Lab04Slave.c: 114:         _delay((unsigned long)((5)*(4000000/4000.0)));
   509  0031  3007               	movlw	7
   510  0032  1283               	bcf	3,5	;RP0=0, select bank0
   511  0033  1303               	bcf	3,6	;RP1=0, select bank0
   512  0034  00A7               	movwf	??_main+1
   513  0035  307C               	movlw	124
   514  0036  00A6               	movwf	??_main
   515  0037                     u107:	
   516  0037  0BA6               	decfsz	??_main,f
   517  0038  2837               	goto	u107
   518  0039  0BA7               	decfsz	??_main+1,f
   519  003A  2837               	goto	u107
   520  003B  0000               	nop
   521  003C                     l949:	
   522                           
   523                           ;Lab04Slave.c: 116:         ADCON0bits.CHS3 = 0;
   524  003C  1283               	bcf	3,5	;RP0=0, select bank0
   525  003D  1303               	bcf	3,6	;RP1=0, select bank0
   526  003E  129F               	bcf	31,5	;volatile
   527  003F                     l951:	
   528                           
   529                           ;Lab04Slave.c: 117:         ADCON0bits.CHS2 = 0;
   530  003F  121F               	bcf	31,4	;volatile
   531  0040                     l953:	
   532                           
   533                           ;Lab04Slave.c: 118:         ADCON0bits.CHS1 = 0;
   534  0040  119F               	bcf	31,3	;volatile
   535  0041                     l955:	
   536                           
   537                           ;Lab04Slave.c: 119:         ADCON0bits.CHS0 = 1;
   538  0041  151F               	bsf	31,2	;volatile
   539  0042                     l957:	
   540                           
   541                           ;Lab04Slave.c: 121:         PIR1bits.ADIF = 0;
   542  0042  130C               	bcf	12,6	;volatile
   543  0043                     l959:	
   544                           
   545                           ;Lab04Slave.c: 122:         ADCON0bits.GO = 1;
   546  0043  149F               	bsf	31,1	;volatile
   547  0044                     l961:	
   548                           
   549                           ;Lab04Slave.c: 124:         Val2 = ADRESH;
   550  0044  081E               	movf	30,w	;volatile
   551  0045  00A6               	movwf	??_main
   552  0046  01A7               	clrf	??_main+1
   553  0047  0826               	movf	??_main,w
   554  0048  00F5               	movwf	_Val2
   555  0049  0827               	movf	??_main+1,w
   556  004A  00F6               	movwf	_Val2+1
   557  004B                     l963:	
   558                           
   559                           ;Lab04Slave.c: 126:         _delay((unsigned long)((5)*(4000000/4000.0)));
   560  004B  3007               	movlw	7
   561  004C  1283               	bcf	3,5	;RP0=0, select bank0
   562  004D  1303               	bcf	3,6	;RP1=0, select bank0
   563  004E  00A7               	movwf	??_main+1
   564  004F  307C               	movlw	124
   565  0050  00A6               	movwf	??_main
   566  0051                     u117:	
   567  0051  0BA6               	decfsz	??_main,f
   568  0052  2851               	goto	u117
   569  0053  0BA7               	decfsz	??_main+1,f
   570  0054  2851               	goto	u117
   571  0055  0000               	nop
   572  0056  2820               	goto	l929
   573  0057  120A  118A  280C   	ljmp	start
   574  005A                     __end_of_main:	
   575                           
   576                           	psect	text1
   577  005A                     __ptext1:	
   578 ;; *************** function _config *****************
   579 ;; Defined at:
   580 ;;		line 40 in file "Lab04Slave.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      void 
   587 ;; Registers used:
   588 ;;		wreg, status,2, status,0, pclath, cstack
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   594 ;;      Params:         0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0
   596 ;;      Temps:          0       2       0       0       0
   597 ;;      Totals:         0       2       0       0       0
   598 ;;Total ram usage:        2 bytes
   599 ;; Hardware stack levels used:    1
   600 ;; Hardware stack levels required when called:    4
   601 ;; This function calls:
   602 ;;		_spiInit
   603 ;; This function is called by:
   604 ;;		_main
   605 ;; This function uses a non-reentrant model
   606 ;;
   607                           
   608                           
   609                           ;psect for function _config
   610  005A                     _config:	
   611  005A                     l901:	
   612                           ;incstack = 0
   613                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
   614                           
   615                           
   616                           ;Lab04Slave.c: 41:     PORTA = 0;
   617  005A  1283               	bcf	3,5	;RP0=0, select bank0
   618  005B  1303               	bcf	3,6	;RP1=0, select bank0
   619  005C  0185               	clrf	5	;volatile
   620                           
   621                           ;Lab04Slave.c: 42:     PORTB = 0;
   622  005D  0186               	clrf	6	;volatile
   623                           
   624                           ;Lab04Slave.c: 43:     PORTC = 0;
   625  005E  0187               	clrf	7	;volatile
   626                           
   627                           ;Lab04Slave.c: 44:     PORTD = 0;
   628  005F  0188               	clrf	8	;volatile
   629  0060                     l903:	
   630                           
   631                           ;Lab04Slave.c: 46:     TRISA = 0b00000011;
   632  0060  3003               	movlw	3
   633  0061  1683               	bsf	3,5	;RP0=1, select bank1
   634  0062  1303               	bcf	3,6	;RP1=0, select bank1
   635  0063  0085               	movwf	5	;volatile
   636  0064                     l905:	
   637                           
   638                           ;Lab04Slave.c: 47:     TRISB = 0;
   639  0064  0186               	clrf	6	;volatile
   640                           
   641                           ;Lab04Slave.c: 48:     TRISC = 0b00011000;
   642  0065  3018               	movlw	24
   643  0066  0087               	movwf	7	;volatile
   644  0067                     l907:	
   645                           
   646                           ;Lab04Slave.c: 49:     TRISD = 0;
   647  0067  0188               	clrf	8	;volatile
   648  0068                     l909:	
   649                           
   650                           ;Lab04Slave.c: 50:     ANSEL = 0b00000011;
   651  0068  3003               	movlw	3
   652  0069  1683               	bsf	3,5	;RP0=1, select bank3
   653  006A  1703               	bsf	3,6	;RP1=1, select bank3
   654  006B  0088               	movwf	8	;volatile
   655                           
   656                           ;Lab04Slave.c: 51:     ANSELH = 0;
   657  006C  0189               	clrf	9	;volatile
   658                           
   659                           ;Lab04Slave.c: 53:     ADCON1 = 0;
   660  006D  1683               	bsf	3,5	;RP0=1, select bank1
   661  006E  1303               	bcf	3,6	;RP1=0, select bank1
   662  006F  019F               	clrf	31	;volatile
   663  0070                     l911:	
   664                           
   665                           ;Lab04Slave.c: 55:    INTCONbits.GIE = 1;
   666  0070  178B               	bsf	11,7	;volatile
   667  0071                     l913:	
   668                           
   669                           ;Lab04Slave.c: 56:    INTCONbits.PEIE = 1;
   670  0071  170B               	bsf	11,6	;volatile
   671  0072                     l915:	
   672                           
   673                           ;Lab04Slave.c: 57:    PIR1bits.SSPIF = 0;
   674  0072  1283               	bcf	3,5	;RP0=0, select bank0
   675  0073  1303               	bcf	3,6	;RP1=0, select bank0
   676  0074  118C               	bcf	12,3	;volatile
   677  0075                     l917:	
   678                           
   679                           ;Lab04Slave.c: 58:    PIE1bits.SSPIE = 1;
   680  0075  1683               	bsf	3,5	;RP0=1, select bank1
   681  0076  1303               	bcf	3,6	;RP1=0, select bank1
   682  0077  158C               	bsf	12,3	;volatile
   683  0078                     l919:	
   684                           
   685                           ;Lab04Slave.c: 60:    spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
      +                          OW, SPI_IDLE_2_ACTIVE);
   686  0078  1283               	bcf	3,5	;RP0=0, select bank0
   687  0079  1303               	bcf	3,6	;RP1=0, select bank0
   688  007A  01A0               	clrf	spiInit@sDataSample
   689  007B  01A1               	clrf	spiInit@sClockIdle
   690  007C  01A2               	clrf	spiInit@sTransmitEdge
   691  007D  3025               	movlw	37
   692  007E  120A  118A  20C5  120A  118A  	fcall	_spiInit
   693  0083                     l921:	
   694                           
   695                           ;Lab04Slave.c: 62:    ADCON0bits.ADON = 1;
   696  0083  1283               	bcf	3,5	;RP0=0, select bank0
   697  0084  1303               	bcf	3,6	;RP1=0, select bank0
   698  0085  141F               	bsf	31,0	;volatile
   699  0086                     l923:	
   700                           
   701                           ;Lab04Slave.c: 63:    _delay((unsigned long)((20)*(4000000/4000.0)));
   702  0086  301A               	movlw	26
   703  0087  1283               	bcf	3,5	;RP0=0, select bank0
   704  0088  1303               	bcf	3,6	;RP1=0, select bank0
   705  0089  00A5               	movwf	??_config+1
   706  008A  30F7               	movlw	247
   707  008B  00A4               	movwf	??_config
   708  008C                     u127:	
   709  008C  0BA4               	decfsz	??_config,f
   710  008D  288C               	goto	u127
   711  008E  0BA5               	decfsz	??_config+1,f
   712  008F  288C               	goto	u127
   713  0090  2891               	nop2
   714  0091                     l925:	
   715                           
   716                           ;Lab04Slave.c: 64:    ADCON0bits.GO_DONE = 1;
   717  0091  1283               	bcf	3,5	;RP0=0, select bank0
   718  0092  1303               	bcf	3,6	;RP1=0, select bank0
   719  0093  149F               	bsf	31,1	;volatile
   720  0094                     l45:	
   721  0094  0008               	return
   722  0095                     __end_of_config:	
   723                           
   724                           	psect	text2
   725  00C5                     __ptext2:	
   726 ;; *************** function _spiInit *****************
   727 ;; Defined at:
   728 ;;		line 13 in file "lab4s.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  sType           1    wreg     enum E1264
   731 ;;  sDataSample     1    0[BANK0 ] enum E1272
   732 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   733 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   734 ;; Auto vars:     Size  Location     Type
   735 ;;  sType           1    3[BANK0 ] enum E1264
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       3       0       0       0
   746 ;;      Locals:         0       1       0       0       0
   747 ;;      Temps:          0       0       0       0       0
   748 ;;      Totals:         0       4       0       0       0
   749 ;;Total ram usage:        4 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    3
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_config
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           
   760                           ;psect for function _spiInit
   761  00C5                     _spiInit:	
   762                           
   763                           ;incstack = 0
   764                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   765                           ;spiInit@sType stored from wreg
   766  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   767  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   768  00C7  00A3               	movwf	spiInit@sType
   769  00C8                     l891:	
   770                           
   771                           ;lab4s.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);lab4s.c: 14: {;lab4s.c: 15:     TRISC5 = 0;
   772  00C8  1683               	bsf	3,5	;RP0=1, select bank1
   773  00C9  1303               	bcf	3,6	;RP1=0, select bank1
   774  00CA  1287               	bcf	7,5	;volatile
   775                           
   776                           ;lab4s.c: 16:     if(sType & 0b00000100)
   777  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   778  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   779  00CD  1D23               	btfss	spiInit@sType,2
   780  00CE  28D0               	goto	u91
   781  00CF  28D1               	goto	u90
   782  00D0                     u91:	
   783  00D0  28D7               	goto	l897
   784  00D1                     u90:	
   785  00D1                     l893:	
   786                           
   787                           ;lab4s.c: 17:     {;lab4s.c: 18:         SSPSTAT = sTransmitEdge;
   788  00D1  0822               	movf	spiInit@sTransmitEdge,w
   789  00D2  1683               	bsf	3,5	;RP0=1, select bank1
   790  00D3  1303               	bcf	3,6	;RP1=0, select bank1
   791  00D4  0094               	movwf	20	;volatile
   792  00D5                     l895:	
   793                           
   794                           ;lab4s.c: 19:         TRISC3 = 1;
   795  00D5  1587               	bsf	7,3	;volatile
   796                           
   797                           ;lab4s.c: 20:     }
   798  00D6  28DD               	goto	l83
   799  00D7                     l897:	
   800                           
   801                           ;lab4s.c: 22:     {;lab4s.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   802  00D7  0820               	movf	spiInit@sDataSample,w
   803  00D8  0422               	iorwf	spiInit@sTransmitEdge,w
   804  00D9  1683               	bsf	3,5	;RP0=1, select bank1
   805  00DA  1303               	bcf	3,6	;RP1=0, select bank1
   806  00DB  0094               	movwf	20	;volatile
   807  00DC                     l899:	
   808                           
   809                           ;lab4s.c: 24:         TRISC3 = 0;
   810  00DC  1187               	bcf	7,3	;volatile
   811  00DD                     l83:	
   812                           ;lab4s.c: 25:     }
   813                           
   814                           
   815                           ;lab4s.c: 27:     SSPCON = sType | sClockIdle;
   816  00DD  1283               	bcf	3,5	;RP0=0, select bank0
   817  00DE  1303               	bcf	3,6	;RP1=0, select bank0
   818  00DF  0823               	movf	spiInit@sType,w
   819  00E0  0421               	iorwf	spiInit@sClockIdle,w
   820  00E1  0094               	movwf	20	;volatile
   821  00E2                     l84:	
   822  00E2  0008               	return
   823  00E3                     __end_of_spiInit:	
   824                           
   825                           	psect	text3
   826  0095                     __ptext3:	
   827 ;; *************** function _isr *****************
   828 ;; Defined at:
   829 ;;		line 78 in file "Lab04Slave.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0
   845 ;;      Temps:          4       0       0       0       0
   846 ;;      Totals:         4       0       0       0       0
   847 ;;Total ram usage:        4 bytes
   848 ;; Hardware stack levels used:    1
   849 ;; Hardware stack levels required when called:    2
   850 ;; This function calls:
   851 ;;		_spiRead
   852 ;;		_spiWrite
   853 ;; This function is called by:
   854 ;;		Interrupt level 1
   855 ;; This function uses a non-reentrant model
   856 ;;
   857                           
   858                           
   859                           ;psect for function _isr
   860  0095                     _isr:	
   861  0095                     i1l841:	
   862                           
   863                           ;Lab04Slave.c: 79:    if(PIR1bits.SSPIF == 1){
   864  0095  1283               	bcf	3,5	;RP0=0, select bank0
   865  0096  1303               	bcf	3,6	;RP1=0, select bank0
   866  0097  1D8C               	btfss	12,3	;volatile
   867  0098  289A               	goto	u7_21
   868  0099  289B               	goto	u7_20
   869  009A                     u7_21:	
   870  009A  28BE               	goto	i1l59
   871  009B                     u7_20:	
   872  009B                     i1l843:	
   873                           
   874                           ;Lab04Slave.c: 80:         escoger = spiRead();
   875  009B  120A  118A  20E3  120A  118A  	fcall	_spiRead
   876  00A0  00F1               	movwf	??_isr
   877  00A1  01F2               	clrf	??_isr+1
   878  00A2  0871               	movf	??_isr,w
   879  00A3  00F7               	movwf	_escoger
   880  00A4  0872               	movf	??_isr+1,w
   881  00A5  00F8               	movwf	_escoger+1
   882  00A6                     i1l845:	
   883                           
   884                           ;Lab04Slave.c: 81:         if (escoger == 1 ){
   885  00A6  0377               	decf	_escoger,w
   886  00A7  0478               	iorwf	_escoger+1,w
   887  00A8  1D03               	btfss	3,2
   888  00A9  28AB               	goto	u8_21
   889  00AA  28AC               	goto	u8_20
   890  00AB                     u8_21:	
   891  00AB  28B5               	goto	i1l849
   892  00AC                     u8_20:	
   893  00AC                     i1l847:	
   894                           
   895                           ;Lab04Slave.c: 82:             spiWrite(Val1);
   896  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   897  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   898  00AE  0828               	movf	_Val1,w
   899  00AF  120A  118A  20F3  120A  118A  	fcall	_spiWrite
   900                           
   901                           ;Lab04Slave.c: 83:         }
   902  00B4  28BB               	goto	i1l851
   903  00B5                     i1l849:	
   904                           
   905                           ;Lab04Slave.c: 85:             spiWrite(Val2);
   906  00B5  0875               	movf	_Val2,w
   907  00B6  120A  118A  20F3  120A  118A  	fcall	_spiWrite
   908  00BB                     i1l851:	
   909                           
   910                           ;Lab04Slave.c: 87:         SSPIF = 0;
   911  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   912  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   913  00BD  118C               	bcf	12,3	;volatile
   914  00BE                     i1l59:	
   915  00BE  0874               	movf	??_isr+3,w
   916  00BF  008A               	movwf	10
   917  00C0  0E73               	swapf	(??_isr+2)^(0+4294967168),w
   918  00C1  0083               	movwf	3
   919  00C2  0EFE               	swapf	btemp,f
   920  00C3  0E7E               	swapf	btemp,w
   921  00C4  0009               	retfie
   922  00C5                     __end_of_isr:	
   923                           
   924                           	psect	intentry
   925  0004                     __pintentry:	
   926                           ;incstack = 0
   927                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
   928                           
   929  0004                     interrupt_function:	
   930  007E                     saved_w	set	btemp
   931  0004  00FE               	movwf	btemp
   932  0005  0E03               	swapf	3,w
   933  0006  00F3               	movwf	??_isr+2
   934  0007  080A               	movf	10,w
   935  0008  00F4               	movwf	??_isr+3
   936  0009  120A  118A  2895   	ljmp	_isr
   937                           
   938                           	psect	text4
   939  00F3                     __ptext4:	
   940 ;; *************** function _spiWrite *****************
   941 ;; Defined at:
   942 ;;		line 35 in file "lab4s.c"
   943 ;; Parameters:    Size  Location     Type
   944 ;;  dat             1    wreg     unsigned char 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  dat             1    0[COMMON] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   956 ;;      Params:         0       0       0       0       0
   957 ;;      Locals:         1       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0
   959 ;;      Totals:         1       0       0       0       0
   960 ;;Total ram usage:        1 bytes
   961 ;; Hardware stack levels used:    1
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_isr
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _spiWrite
   971  00F3                     _spiWrite:	
   972                           
   973                           ;incstack = 0
   974                           ; Regs used in _spiWrite: [wreg]
   975                           ;spiWrite@dat stored from wreg
   976  00F3  00F0               	movwf	spiWrite@dat
   977  00F4                     i1l839:	
   978                           
   979                           ;lab4s.c: 35: void spiWrite(char dat);lab4s.c: 36: {;lab4s.c: 37:     SSPBUF = dat;
   980  00F4  0870               	movf	spiWrite@dat,w
   981  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   982  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   983  00F7  0093               	movwf	19	;volatile
   984  00F8                     i1l93:	
   985  00F8  0008               	return
   986  00F9                     __end_of_spiWrite:	
   987                           
   988                           	psect	text5
   989  00E3                     __ptext5:	
   990 ;; *************** function _spiRead *****************
   991 ;; Defined at:
   992 ;;		line 48 in file "lab4s.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;		None
   997 ;; Return value:  Size  Location     Type
   998 ;;                  1    wreg      unsigned char 
   999 ;; Registers used:
  1000 ;;		wreg, status,2, status,0, pclath, cstack
  1001 ;; Tracked objects:
  1002 ;;		On entry : 0/0
  1003 ;;		On exit  : 0/0
  1004 ;;		Unchanged: 0/0
  1005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1006 ;;      Params:         0       0       0       0       0
  1007 ;;      Locals:         0       0       0       0       0
  1008 ;;      Temps:          0       0       0       0       0
  1009 ;;      Totals:         0       0       0       0       0
  1010 ;;Total ram usage:        0 bytes
  1011 ;; Hardware stack levels used:    1
  1012 ;; Hardware stack levels required when called:    1
  1013 ;; This function calls:
  1014 ;;		_spiReceiveWait
  1015 ;; This function is called by:
  1016 ;;		_isr
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           
  1021                           ;psect for function _spiRead
  1022  00E3                     _spiRead:	
  1023  00E3                     i1l833:	
  1024                           ;incstack = 0
  1025                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1026                           
  1027                           
  1028                           ;lab4s.c: 50:     spiReceiveWait();
  1029  00E3  120A  118A  20EC  120A  118A  	fcall	_spiReceiveWait
  1030  00E8                     i1l835:	
  1031                           
  1032                           ;lab4s.c: 51:     return(SSPBUF);
  1033  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1034  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1035  00EA  0813               	movf	19,w	;volatile
  1036  00EB                     i1l101:	
  1037  00EB  0008               	return
  1038  00EC                     __end_of_spiRead:	
  1039                           
  1040                           	psect	text6
  1041  00EC                     __ptext6:	
  1042 ;; *************** function _spiReceiveWait *****************
  1043 ;; Defined at:
  1044 ;;		line 30 in file "lab4s.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		None
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_spiRead
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _spiReceiveWait
  1073  00EC                     _spiReceiveWait:	
  1074  00EC                     i1l805:	
  1075                           ;incstack = 0
  1076                           ; Regs used in _spiReceiveWait: []
  1077                           
  1078  00EC                     i1l87:	
  1079                           ;lab4s.c: 32:     while ( !SSPSTATbits.BF );
  1080                           
  1081  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  1082  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  1083  00EE  1C14               	btfss	20,0	;volatile
  1084  00EF  28F1               	goto	u6_21
  1085  00F0  28F2               	goto	u6_20
  1086  00F1                     u6_21:	
  1087  00F1  28EC               	goto	i1l87
  1088  00F2                     u6_20:	
  1089  00F2                     i1l90:	
  1090  00F2  0008               	return
  1091  00F3                     __end_of_spiReceiveWait:	
  1092  007E                     btemp	set	126	;btemp
  1093  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      8      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_config
    _config->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     456
                                              6 BANK0      2     2      0
                             _config
 ---------------------------------------------------------------------------------
 (1) _config                                               2     2      0     456
                                              4 BANK0      2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0      22
                                              1 COMMON     4     4      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 12:06:36 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l45 0094  
                      l83 00DD                        l84 00E2                        u90 00D1  
                      u91 00D0                       l901 005A                       l911 0070  
                     l903 0060                       l921 0083                       l913 0071  
                     l905 0064                       l923 0086                       l915 0072  
                     l907 0067                       l931 0023                       l925 0091  
                     l917 0075                       l909 0068                       l941 0028  
                     l933 0024                       l919 0078                       l951 003F  
                     l943 0029                       l935 0025                       l927 001B  
                     l961 0044                       l953 0040                       l945 002A  
                     l937 0026                       l929 0020                       l891 00C8  
                     l963 004B                       l955 0041                       l947 0031  
                     l939 0027                       l893 00D1                       l957 0042  
                     l949 003C                       l895 00D5                       l959 0043  
                     l897 00D7                       l899 00DC                       u107 0037  
                     u117 0051                       u127 008C              __CFG_CPD$OFF 0000  
                     _isr 0095              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    i1l90 00F2                      i1l59 00BE                      i1l93 00F8  
                    i1l87 00EC                      u6_20 00F2                      u6_21 00F1  
                    u7_20 009B                      u7_21 009A                      u8_20 00AC  
                    u8_21 00AB                      _Val1 0028                      _Val2 0075  
            __CFG_WRT$OFF 0000                      _main 001B                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0071  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l101 00EB                     i1l805 00EC                     i1l833 00E3  
                   i1l841 0095                     i1l835 00E8                     i1l851 00BB  
                   i1l843 009B                     i1l845 00A6                     i1l839 00F4  
                   i1l847 00AC                     i1l849 00B5                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _SSPIF 0063            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 00E3  
         __end_of_spiRead 00EC                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 005A  
                  ??_main 0026                    _ADCON1 009F                    _ADRESH 001E  
                  _ANSELH 0189                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  _config 005A                    saved_w 007E          __end_of_spiWrite 00F9  
               ??_spiInit 0075                 ??_spiRead 0070   __end_of__initialization 0017  
          __pcstackCOMMON 0070                __pbssBANK0 0028                __pmaintext 001B  
              __pintentry 0004                   ?_config 0070   __size_of_spiReceiveWait 0007  
                 _SSPSTAT 0094                 ?_spiWrite 0070           __size_of_config 003B  
                 __ptext1 005A                   __ptext2 00C5                   __ptext3 0095  
                 __ptext4 00F3                   __ptext5 00E3                   __ptext6 00EC  
                 _escoger 0077              __size_of_isr 0030                   _spiInit 00C5  
                 _spiRead 00E3      end_of_initialization 0017                ??_spiWrite 0070  
             spiWrite@dat 0070            _spiReceiveWait 00EC            __end_of_config 0095  
     start_initialization 000F               __end_of_isr 00C5  __CFG_FOSC$INTRC_NOCLKOUT 0000  
  __end_of_spiReceiveWait 00F3                  ??_config 0024               __pbssCOMMON 0075  
               ___latbits 0002             __pcstackBANK0 0020           ?_spiReceiveWait 0070  
       __size_of_spiWrite 0006                  ?_spiInit 0020                  ?_spiRead 0070  
    spiInit@sTransmitEdge 0022         interrupt_function 0004                  _PIE1bits 008C  
      spiInit@sDataSample 0020                  _PIR1bits 000C                _ADCON0bits 001F  
        __size_of_spiInit 001E          __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 003F                  _spiWrite 00F3              spiInit@sType 0023  
       spiInit@sClockIdle 0021                _INTCONbits 000B                  intlevel1 0000  
        ??_spiReceiveWait 0070  
