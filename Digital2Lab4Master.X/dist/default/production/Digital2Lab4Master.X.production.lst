

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 17 13:46:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0013                     _SSPBUF	set	19
   284  0014                     _SSPCON	set	20
   285  001A                     _RCREG	set	26
   286  0019                     _TXREG	set	25
   287  000C                     _PIR1bits	set	12
   288  0018                     _RCSTAbits	set	24
   289  0008                     _PORTD	set	8
   290  0007                     _PORTC	set	7
   291  0006                     _PORTB	set	6
   292  0005                     _PORTA	set	5
   293  0094                     _SSPSTATbits	set	148
   294  0094                     _SSPSTAT	set	148
   295  008C                     _PIE1bits	set	140
   296  009A                     _SPBRGH	set	154
   297  0099                     _SPBRG	set	153
   298  0098                     _TXSTAbits	set	152
   299  009F                     _ADCON1	set	159
   300  0088                     _TRISD	set	136
   301  0087                     _TRISC	set	135
   302  0086                     _TRISB	set	134
   303  0085                     _TRISA	set	133
   304  043B                     _TRISC3	set	1083
   305  043D                     _TRISC5	set	1085
   306  0187                     _BAUDCTLbits	set	391
   307  0189                     _ANSELH	set	393
   308  0188                     _ANSEL	set	392
   309                           
   310                           ; #config settings
   311  0000                     
   312                           	psect	cinit
   313  07F6                     start_initialization:	
   314  07F6                     __initialization:	
   315                           
   316                           ; Clear objects allocated to COMMON
   317  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   318  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   319  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   320  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   321  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   322  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   323  07FC                     end_of_initialization:	
   324                           ;End of C runtime variable initialization code
   325                           
   326  07FC                     __end_of__initialization:	
   327  07FC  0183               	clrf	3
   328  07FD  120A  118A  2FA6   	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMMON
   331  0070                     __pbssCOMMON:	
   332  0070                     _cont:	
   333  0070                     	ds	2
   334  0072                     _Pot2:	
   335  0072                     	ds	2
   336  0074                     _Pot1:	
   337  0074                     	ds	2
   338                           
   339                           	psect	cstackCOMMON
   340  0076                     __pcstackCOMMON:	
   341  0076                     ?_spiInit:	
   342  0076                     ?_spiWrite:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0076                     ??_spiWrite:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0076                     ?_spiRead:	
   349                           ; 1 bytes @ 0x0
   350                           
   351  0076                     ??_spiRead:	
   352                           ; 1 bytes @ 0x0
   353                           
   354  0076                     ?_config:	
   355                           ; 1 bytes @ 0x0
   356                           
   357  0076                     ?_main:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0076                     ?_spiReceiveWait:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0076                     ??_spiReceiveWait:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0076                     spiInit@sDataSample:	
   367                           ; 1 bytes @ 0x0
   368                           
   369  0076                     spiWrite@dat:	
   370                           ; 1 bytes @ 0x0
   371                           
   372                           
   373                           ; 1 bytes @ 0x0
   374  0076                     	ds	1
   375  0077                     spiInit@sClockIdle:	
   376                           
   377                           ; 1 bytes @ 0x1
   378  0077                     	ds	1
   379  0078                     spiInit@sTransmitEdge:	
   380                           
   381                           ; 1 bytes @ 0x2
   382  0078                     	ds	1
   383  0079                     ??_spiInit:	
   384  0079                     spiInit@sType:	
   385                           ; 1 bytes @ 0x3
   386                           
   387                           
   388                           ; 1 bytes @ 0x3
   389  0079                     	ds	1
   390  007A                     ??_config:	
   391  007A                     ??_main:	
   392                           ; 1 bytes @ 0x4
   393                           
   394                           
   395                           ; 1 bytes @ 0x4
   396  007A                     	ds	2
   397                           
   398                           	psect	maintext
   399  07A6                     __pmaintext:	
   400 ;;
   401 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   402 ;;
   403 ;; *************** function _main *****************
   404 ;; Defined at:
   405 ;;		line 78 in file "Lab04Master.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, pclath, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : B00/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          2       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels required when called:    2
   425 ;; This function calls:
   426 ;;		_config
   427 ;;		_spiRead
   428 ;;		_spiWrite
   429 ;; This function is called by:
   430 ;;		Startup code after reset
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           
   435                           ;psect for function _main
   436  07A6                     _main:	
   437  07A6                     l821:	
   438                           ;incstack = 0
   439                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   440                           
   441                           
   442                           ;Lab04Master.c: 79:     config();
   443  07A6  120A  118A  2770  120A  118A  	fcall	_config
   444  07AB                     l62:	
   445                           ;Lab04Master.c: 80:     while(1){
   446                           
   447                           
   448                           ;Lab04Master.c: 82:        spiWrite(1);
   449  07AB  3001               	movlw	1
   450  07AC  120A  118A  2744  120A  118A  	fcall	_spiWrite
   451                           
   452                           ;Lab04Master.c: 83:        Pot1 = spiRead();
   453  07B1  120A  118A  2751  120A  118A  	fcall	_spiRead
   454  07B6  00FA               	movwf	??_main
   455  07B7  01FB               	clrf	??_main+1
   456  07B8  087A               	movf	??_main,w
   457  07B9  00F4               	movwf	_Pot1
   458  07BA  087B               	movf	??_main+1,w
   459  07BB  00F5               	movwf	_Pot1+1
   460  07BC                     l823:	
   461                           
   462                           ;Lab04Master.c: 84:        _delay((unsigned long)((5)*(4000000/4000.0)));
   463  07BC  3007               	movlw	7
   464  07BD  00FB               	movwf	??_main+1
   465  07BE  307D               	movlw	125
   466  07BF  00FA               	movwf	??_main
   467  07C0                     u87:	
   468  07C0  0BFA               	decfsz	??_main,f
   469  07C1  2FC0               	goto	u87
   470  07C2  0BFB               	decfsz	??_main+1,f
   471  07C3  2FC0               	goto	u87
   472  07C4                     l825:	
   473                           
   474                           ;Lab04Master.c: 85:        spiWrite(0);
   475  07C4  3000               	movlw	0
   476  07C5  120A  118A  2744  120A  118A  	fcall	_spiWrite
   477  07CA                     l827:	
   478                           
   479                           ;Lab04Master.c: 86:        Pot2 = spiRead();
   480  07CA  120A  118A  2751  120A  118A  	fcall	_spiRead
   481  07CF  00FA               	movwf	??_main
   482  07D0  01FB               	clrf	??_main+1
   483  07D1  087A               	movf	??_main,w
   484  07D2  00F2               	movwf	_Pot2
   485  07D3  087B               	movf	??_main+1,w
   486  07D4  00F3               	movwf	_Pot2+1
   487  07D5                     l829:	
   488                           
   489                           ;Lab04Master.c: 87:        _delay((unsigned long)((5)*(4000000/4000.0)));
   490  07D5  3007               	movlw	7
   491  07D6  00FB               	movwf	??_main+1
   492  07D7  307D               	movlw	125
   493  07D8  00FA               	movwf	??_main
   494  07D9                     u97:	
   495  07D9  0BFA               	decfsz	??_main,f
   496  07DA  2FD9               	goto	u97
   497  07DB  0BFB               	decfsz	??_main+1,f
   498  07DC  2FD9               	goto	u97
   499  07DD                     l831:	
   500                           
   501                           ;Lab04Master.c: 90:         TXREG = Pot1;
   502  07DD  0874               	movf	_Pot1,w
   503  07DE  1283               	bcf	3,5	;RP0=0, select bank0
   504  07DF  1303               	bcf	3,6	;RP1=0, select bank0
   505  07E0  0099               	movwf	25	;volatile
   506  07E1                     l63:	
   507                           ;Lab04Master.c: 92:         }
   508                           
   509                           
   510                           ;Lab04Master.c: 91:         while (PIR1bits.TXIF == 0){
   511  07E1  1E0C               	btfss	12,4	;volatile
   512  07E2  2FE4               	goto	u61
   513  07E3  2FE5               	goto	u60
   514  07E4                     u61:	
   515  07E4  2FE1               	goto	l63
   516  07E5                     u60:	
   517  07E5                     l833:	
   518                           
   519                           ;Lab04Master.c: 94:         TXREG = Pot2;
   520  07E5  0872               	movf	_Pot2,w
   521  07E6  0099               	movwf	25	;volatile
   522  07E7                     l66:	
   523                           ;Lab04Master.c: 96:         }
   524                           
   525                           
   526                           ;Lab04Master.c: 95:         while (PIR1bits.TXIF ==0){
   527  07E7  1E0C               	btfss	12,4	;volatile
   528  07E8  2FEA               	goto	u71
   529  07E9  2FEB               	goto	u70
   530  07EA                     u71:	
   531  07EA  2FE7               	goto	l66
   532  07EB                     u70:	
   533  07EB                     l835:	
   534                           
   535                           ;Lab04Master.c: 98:         cont = RCREG;
   536  07EB  081A               	movf	26,w	;volatile
   537  07EC  00FA               	movwf	??_main
   538  07ED  01FB               	clrf	??_main+1
   539  07EE  087A               	movf	??_main,w
   540  07EF  00F0               	movwf	_cont
   541  07F0  087B               	movf	??_main+1,w
   542  07F1  00F1               	movwf	_cont+1
   543  07F2  2FAB               	goto	l62
   544  07F3  120A  118A  2800   	ljmp	start
   545  07F6                     __end_of_main:	
   546                           
   547                           	psect	text1
   548  0744                     __ptext1:	
   549 ;; *************** function _spiWrite *****************
   550 ;; Defined at:
   551 ;;		line 35 in file "lab4s.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  dat             1    wreg     unsigned char 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  dat             1    0[COMMON] unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         1       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         1       0       0       0       0
   569 ;;Total ram usage:        1 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _spiWrite
   580  0744                     _spiWrite:	
   581                           
   582                           ;incstack = 0
   583                           ; Regs used in _spiWrite: [wreg]
   584                           ;spiWrite@dat stored from wreg
   585  0744  00F6               	movwf	spiWrite@dat
   586  0745                     l745:	
   587                           
   588                           ;lab4s.c: 35: void spiWrite(char dat);lab4s.c: 36: {;lab4s.c: 37:     SSPBUF = dat;
   589  0745  0876               	movf	spiWrite@dat,w
   590  0746  1283               	bcf	3,5	;RP0=0, select bank0
   591  0747  1303               	bcf	3,6	;RP1=0, select bank0
   592  0748  0093               	movwf	19	;volatile
   593  0749                     l97:	
   594  0749  0008               	return
   595  074A                     __end_of_spiWrite:	
   596                           
   597                           	psect	text2
   598  0751                     __ptext2:	
   599 ;; *************** function _spiRead *****************
   600 ;; Defined at:
   601 ;;		line 48 in file "lab4s.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;		None
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      unsigned char 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, pclath, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   615 ;;      Params:         0       0       0       0       0
   616 ;;      Locals:         0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0
   618 ;;      Totals:         0       0       0       0       0
   619 ;;Total ram usage:        0 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    1
   622 ;; This function calls:
   623 ;;		_spiReceiveWait
   624 ;; This function is called by:
   625 ;;		_main
   626 ;; This function uses a non-reentrant model
   627 ;;
   628                           
   629                           
   630                           ;psect for function _spiRead
   631  0751                     _spiRead:	
   632  0751                     l747:	
   633                           ;incstack = 0
   634                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
   635                           
   636                           
   637                           ;lab4s.c: 50:     spiReceiveWait();
   638  0751  120A  118A  274A  120A  118A  	fcall	_spiReceiveWait
   639  0756                     l749:	
   640                           
   641                           ;lab4s.c: 51:     return(SSPBUF);
   642  0756  1283               	bcf	3,5	;RP0=0, select bank0
   643  0757  1303               	bcf	3,6	;RP1=0, select bank0
   644  0758  0813               	movf	19,w	;volatile
   645  0759                     l105:	
   646  0759  0008               	return
   647  075A                     __end_of_spiRead:	
   648                           
   649                           	psect	text3
   650  074A                     __ptext3:	
   651 ;; *************** function _spiReceiveWait *****************
   652 ;; Defined at:
   653 ;;		line 30 in file "lab4s.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		None
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0
   670 ;;      Totals:         0       0       0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_spiRead
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           
   681                           ;psect for function _spiReceiveWait
   682  074A                     _spiReceiveWait:	
   683  074A                     l707:	
   684                           ;incstack = 0
   685                           ; Regs used in _spiReceiveWait: []
   686                           
   687  074A                     l91:	
   688                           ;lab4s.c: 32:     while ( !SSPSTATbits.BF );
   689                           
   690  074A  1683               	bsf	3,5	;RP0=1, select bank1
   691  074B  1303               	bcf	3,6	;RP1=0, select bank1
   692  074C  1C14               	btfss	20,0	;volatile
   693  074D  2F4F               	goto	u21
   694  074E  2F50               	goto	u20
   695  074F                     u21:	
   696  074F  2F4A               	goto	l91
   697  0750                     u20:	
   698  0750                     l94:	
   699  0750  0008               	return
   700  0751                     __end_of_spiReceiveWait:	
   701                           
   702                           	psect	text4
   703  0770                     __ptext4:	
   704 ;; *************** function _config *****************
   705 ;; Defined at:
   706 ;;		line 38 in file "Lab04Master.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : 0/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   720 ;;      Params:         0       0       0       0       0
   721 ;;      Locals:         0       0       0       0       0
   722 ;;      Temps:          0       0       0       0       0
   723 ;;      Totals:         0       0       0       0       0
   724 ;;Total ram usage:        0 bytes
   725 ;; Hardware stack levels used:    1
   726 ;; Hardware stack levels required when called:    1
   727 ;; This function calls:
   728 ;;		_spiInit
   729 ;; This function is called by:
   730 ;;		_main
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _config
   736  0770                     _config:	
   737  0770                     l785:	
   738                           ;incstack = 0
   739                           ; Regs used in _config: [wreg+status,2+status,0+pclath+cstack]
   740                           
   741                           
   742                           ;Lab04Master.c: 39:     PORTA = 0;
   743  0770  1283               	bcf	3,5	;RP0=0, select bank0
   744  0771  1303               	bcf	3,6	;RP1=0, select bank0
   745  0772  0185               	clrf	5	;volatile
   746                           
   747                           ;Lab04Master.c: 40:     PORTB = 0;
   748  0773  0186               	clrf	6	;volatile
   749                           
   750                           ;Lab04Master.c: 41:     PORTC = 0;
   751  0774  0187               	clrf	7	;volatile
   752                           
   753                           ;Lab04Master.c: 42:     PORTD = 0;
   754  0775  0188               	clrf	8	;volatile
   755                           
   756                           ;Lab04Master.c: 44:     TRISA = 0;
   757  0776  1683               	bsf	3,5	;RP0=1, select bank1
   758  0777  1303               	bcf	3,6	;RP1=0, select bank1
   759  0778  0185               	clrf	5	;volatile
   760                           
   761                           ;Lab04Master.c: 45:     TRISB = 0;
   762  0779  0186               	clrf	6	;volatile
   763  077A                     l787:	
   764                           
   765                           ;Lab04Master.c: 46:     TRISC = 0b0001000;
   766  077A  3008               	movlw	8
   767  077B  0087               	movwf	7	;volatile
   768  077C                     l789:	
   769                           
   770                           ;Lab04Master.c: 47:     TRISD = 0;
   771  077C  0188               	clrf	8	;volatile
   772  077D                     l791:	
   773                           
   774                           ;Lab04Master.c: 48:     ANSEL = 0;
   775  077D  1683               	bsf	3,5	;RP0=1, select bank3
   776  077E  1703               	bsf	3,6	;RP1=1, select bank3
   777  077F  0188               	clrf	8	;volatile
   778  0780                     l793:	
   779                           
   780                           ;Lab04Master.c: 49:     ANSELH = 0;
   781  0780  0189               	clrf	9	;volatile
   782  0781                     l795:	
   783                           
   784                           ;Lab04Master.c: 51:     ADCON1 = 0;
   785  0781  1683               	bsf	3,5	;RP0=1, select bank1
   786  0782  1303               	bcf	3,6	;RP1=0, select bank1
   787  0783  019F               	clrf	31	;volatile
   788  0784                     l797:	
   789                           
   790                           ;Lab04Master.c: 53:    spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_ID
      +                          LE_LOW, SPI_IDLE_2_ACTIVE);
   791  0784  01F6               	clrf	spiInit@sDataSample
   792  0785  01F7               	clrf	spiInit@sClockIdle
   793  0786  01F8               	clrf	spiInit@sTransmitEdge
   794  0787  3020               	movlw	32
   795  0788  120A  118A  275A  120A  118A  	fcall	_spiInit
   796  078D                     l799:	
   797                           
   798                           ;Lab04Master.c: 57:    TXSTAbits.SYNC = 0;
   799  078D  1683               	bsf	3,5	;RP0=1, select bank1
   800  078E  1303               	bcf	3,6	;RP1=0, select bank1
   801  078F  1218               	bcf	24,4	;volatile
   802  0790                     l801:	
   803                           
   804                           ;Lab04Master.c: 58:    TXSTAbits.BRGH = 1;
   805  0790  1518               	bsf	24,2	;volatile
   806  0791                     l803:	
   807                           
   808                           ;Lab04Master.c: 59:    TXSTAbits.TXEN = 1;
   809  0791  1698               	bsf	24,5	;volatile
   810  0792                     l805:	
   811                           
   812                           ;Lab04Master.c: 61:    BAUDCTLbits.BRG16 = 1;
   813  0792  1683               	bsf	3,5	;RP0=1, select bank3
   814  0793  1703               	bsf	3,6	;RP1=1, select bank3
   815  0794  1587               	bsf	7,3	;volatile
   816  0795                     l807:	
   817                           
   818                           ;Lab04Master.c: 62:    SPBRG = 103;
   819  0795  3067               	movlw	103
   820  0796  1683               	bsf	3,5	;RP0=1, select bank1
   821  0797  1303               	bcf	3,6	;RP1=0, select bank1
   822  0798  0099               	movwf	25	;volatile
   823  0799                     l809:	
   824                           
   825                           ;Lab04Master.c: 63:    SPBRGH = 0;
   826  0799  019A               	clrf	26	;volatile
   827  079A                     l811:	
   828                           
   829                           ;Lab04Master.c: 65:    RCSTAbits.SPEN = 1;
   830  079A  1283               	bcf	3,5	;RP0=0, select bank0
   831  079B  1303               	bcf	3,6	;RP1=0, select bank0
   832  079C  1798               	bsf	24,7	;volatile
   833  079D                     l813:	
   834                           
   835                           ;Lab04Master.c: 66:    RCSTAbits.RX9 = 0;
   836  079D  1318               	bcf	24,6	;volatile
   837  079E                     l815:	
   838                           
   839                           ;Lab04Master.c: 67:    RCSTAbits.CREN = 1;
   840  079E  1618               	bsf	24,4	;volatile
   841  079F                     l817:	
   842                           
   843                           ;Lab04Master.c: 69:    PIE1bits.RCIE = 1;
   844  079F  1683               	bsf	3,5	;RP0=1, select bank1
   845  07A0  1303               	bcf	3,6	;RP1=0, select bank1
   846  07A1  168C               	bsf	12,5	;volatile
   847  07A2                     l819:	
   848                           
   849                           ;Lab04Master.c: 70:    PIR1bits.RCIF = 0;
   850  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   851  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   852  07A4  128C               	bcf	12,5	;volatile
   853  07A5                     l51:	
   854  07A5  0008               	return
   855  07A6                     __end_of_config:	
   856                           
   857                           	psect	text5
   858  075A                     __ptext5:	
   859 ;; *************** function _spiInit *****************
   860 ;; Defined at:
   861 ;;		line 13 in file "lab4s.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;  sType           1    wreg     enum E1264
   864 ;;  sDataSample     1    0[COMMON] enum E1272
   865 ;;  sClockIdle      1    1[COMMON] enum E1276
   866 ;;  sTransmitEdg    1    2[COMMON] enum E1280
   867 ;; Auto vars:     Size  Location     Type
   868 ;;  sType           1    3[COMMON] enum E1264
   869 ;; Return value:  Size  Location     Type
   870 ;;                  1    wreg      void 
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   878 ;;      Params:         3       0       0       0       0
   879 ;;      Locals:         1       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0
   881 ;;      Totals:         4       0       0       0       0
   882 ;;Total ram usage:        4 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; This function calls:
   885 ;;		Nothing
   886 ;; This function is called by:
   887 ;;		_config
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _spiInit
   893  075A                     _spiInit:	
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   897                           ;spiInit@sType stored from wreg
   898  075A  00F9               	movwf	spiInit@sType
   899  075B                     l775:	
   900                           
   901                           ;lab4s.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle s
      +                          ClockIdle, Spi_Transmit_Edge sTransmitEdge);lab4s.c: 14: {;lab4s.c: 15:     TRISC5 = 0;
   902  075B  1683               	bsf	3,5	;RP0=1, select bank1
   903  075C  1303               	bcf	3,6	;RP1=0, select bank1
   904  075D  1287               	bcf	7,5	;volatile
   905                           
   906                           ;lab4s.c: 16:     if(sType & 0b00000100)
   907  075E  1D79               	btfss	spiInit@sType,2
   908  075F  2F61               	goto	u51
   909  0760  2F62               	goto	u50
   910  0761                     u51:	
   911  0761  2F66               	goto	l781
   912  0762                     u50:	
   913  0762                     l777:	
   914                           
   915                           ;lab4s.c: 17:     {;lab4s.c: 18:         SSPSTAT = sTransmitEdge;
   916  0762  0878               	movf	spiInit@sTransmitEdge,w
   917  0763  0094               	movwf	20	;volatile
   918  0764                     l779:	
   919                           
   920                           ;lab4s.c: 19:         TRISC3 = 1;
   921  0764  1587               	bsf	7,3	;volatile
   922                           
   923                           ;lab4s.c: 20:     }
   924  0765  2F6A               	goto	l87
   925  0766                     l781:	
   926                           
   927                           ;lab4s.c: 22:     {;lab4s.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   928  0766  0876               	movf	spiInit@sDataSample,w
   929  0767  0478               	iorwf	spiInit@sTransmitEdge,w
   930  0768  0094               	movwf	20	;volatile
   931  0769                     l783:	
   932                           
   933                           ;lab4s.c: 24:         TRISC3 = 0;
   934  0769  1187               	bcf	7,3	;volatile
   935  076A                     l87:	
   936                           ;lab4s.c: 25:     }
   937                           
   938                           
   939                           ;lab4s.c: 27:     SSPCON = sType | sClockIdle;
   940  076A  0879               	movf	spiInit@sType,w
   941  076B  0477               	iorwf	spiInit@sClockIdle,w
   942  076C  1283               	bcf	3,5	;RP0=0, select bank0
   943  076D  1303               	bcf	3,6	;RP1=0, select bank0
   944  076E  0094               	movwf	20	;volatile
   945  076F                     l88:	
   946  076F  0008               	return
   947  0770                     __end_of_spiInit:	
   948  007E                     btemp	set	126	;btemp
   949  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _config->_spiInit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     375
                                              4 COMMON     2     2      0
                             _config
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 17 13:46:41 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l51 07A5  
                      l62 07AB                        l63 07E1                        l66 07E7  
                      l91 074A                        l94 0750                        l87 076A  
                      l88 076F                        l97 0749                        u20 0750  
                      u21 074F                        u50 0762                        u51 0761  
                      u60 07E5                        u61 07E4                        u70 07EB  
                      u71 07EA                        u87 07C0                        u97 07D9  
                     l105 0759                       l801 0790                       l811 079A  
                     l803 0791                       l707 074A                       l813 079D  
                     l805 0792                       l821 07A6                       l815 079E  
                     l807 0795                       l831 07DD                       l823 07BC  
                     l817 079F                       l809 0799                       l745 0745  
                     l833 07E5                       l825 07C4                       l819 07A2  
                     l747 0751                       l835 07EB                       l827 07CA  
                     l781 0766                       l749 0756                       l829 07D5  
                     l783 0769                       l775 075B                       l791 077D  
                     l777 0762                       l793 0780                       l785 0770  
                     l779 0764                       l795 0781                       l787 077A  
                     l797 0784                       l789 077C                       l799 078D  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000                      _Pot1 0074  
                    _Pot2 0072              __CFG_WRT$OFF 0000                      _cont 0070  
                    _main 07A6                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0076             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _RCREG 001A                     _SPBRG 0099  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _PORTD 0008                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000           __end_of_spiInit 0770  
         __end_of_spiRead 075A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07F6              __end_of_main 07F6  
                  ??_main 007A                    _ADCON1 009F                    _ANSELH 0189  
                  _SPBRGH 009A                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  _config 0770          __end_of_spiWrite 074A                 ??_spiInit 0079  
               ??_spiRead 0076   __end_of__initialization 07FC            __pcstackCOMMON 0076  
              __pmaintext 07A6                   ?_config 0076   __size_of_spiReceiveWait 0007  
                 _SSPSTAT 0094                 ?_spiWrite 0076           __size_of_config 0036  
                 __ptext1 0744                   __ptext2 0751                   __ptext3 074A  
                 __ptext4 0770                   __ptext5 075A                   _spiInit 075A  
                 _spiRead 0751      end_of_initialization 07FC                 _RCSTAbits 0018  
              ??_spiWrite 0076               spiWrite@dat 0076                 _TXSTAbits 0098  
          _spiReceiveWait 074A               _BAUDCTLbits 0187            __end_of_config 07A6  
     start_initialization 07F6  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 0751  
                ??_config 007A               __pbssCOMMON 0070                 ___latbits 0002  
         ?_spiReceiveWait 0076         __size_of_spiWrite 0006                  ?_spiInit 0076  
                ?_spiRead 0076      spiInit@sTransmitEdge 0078                  _PIE1bits 008C  
      spiInit@sDataSample 0076                  _PIR1bits 000C          __size_of_spiInit 0016  
        __size_of_spiRead 0009         __CFG_BOR4V$BOR40V 0000             __size_of_main 0050  
                _spiWrite 0744              spiInit@sType 0079         spiInit@sClockIdle 0077  
        ??_spiReceiveWait 0076  
